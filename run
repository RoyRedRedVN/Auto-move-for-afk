--// Load Rayfield UI
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/SiriusSoftwareLtd/Rayfield/main/source.lua'))()

--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")

-- Table lưu các "dấu chấm"
local pathPoints = {}

-- Default global settings
_G.NPCAutoFollow = true
_G.DistanceThreshold = 5
_G.AutoWalkAFK = true

-- Tạo NPC clone từ player thật
local npc = character:Clone()
npc.Name = "NPC_AFK"
npc.Parent = Workspace

local npcHumanoid = npc:WaitForChild("Humanoid")
local npcRoot = npc:WaitForChild("HumanoidRootPart")

-- Function thêm dấu chấm
local function addDot(position)
    local dot = Instance.new("Part")
    dot.Name = "Dot"
    dot.Size = Vector3.new(2,2,2)
    dot.Position = position + Vector3.new(0,1,0)
    dot.Anchored = true
    dot.CanCollide = false
    dot.BrickColor = BrickColor.new("Bright red")
    dot.Parent = Workspace
    table.insert(pathPoints, dot)
end

-- Auto spawn dot theo vị trí player thật
local lastDotTime = 0
local dotCooldown = 0.5 -- 0.5s giữa mỗi dot
RunService.RenderStepped:Connect(function()
    if _G.AutoWalkAFK and _G.NPCAutoFollow then
        if tick() - lastDotTime >= dotCooldown then
            local lastPos = #pathPoints > 0 and pathPoints[#pathPoints].Position or nil
            if not lastPos or (root.Position - lastPos).Magnitude > _G.DistanceThreshold then
                addDot(root.Position)
                lastDotTime = tick()
            end
        end
    end
end)

-- NPC di chuyển theo path
RunService.Heartbeat:Connect(function()
    if _G.NPCAutoFollow and #pathPoints > 0 and npcHumanoid:GetState() ~= Enum.HumanoidStateType.Seated then
        local targetDot = pathPoints[1]
        npcHumanoid:MoveTo(targetDot.Position)
        if (npcRoot.Position - targetDot.Position).Magnitude < 2 then
            targetDot:Destroy()
            table.remove(pathPoints,1)
        end
    end
end)

-- Khi hết dot → dance + jump + cooldown + lập lại dot
RunService.Heartbeat:Connect(function()
    if _G.NPCAutoFollow and #pathPoints == 0 then
        local danceId = math.random(1,4)
        print("/e dance "..danceId) -- replace bằng RemoteEvent nếu game hỗ trợ
        npcHumanoid.Jump = true
        if _G.AutoWalkAFK then
            addDot(root.Position)
        end
    end
end)

--// Rayfield Window
local Window = Rayfield:CreateWindow({
    Name = "Self NPC Path + AFK Dance",
    LoadingTitle = "Loading...",
    LoadingSubtitle = "Red GPT Script",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "RedScripts",
        FileName = "SelfNPCPathAFK"
    }
})

local Tab = Window:CreateTab("Main", 4483362458)

-- Toggle NPC Auto Follow
Tab:CreateToggle({
    Name = "NPC Auto Follow",
    CurrentValue = _G.NPCAutoFollow,
    Flag = "NPCToggle",
    Callback = function(value)
        _G.NPCAutoFollow = value
        if not value then
            for _, dot in pairs(Workspace:GetChildren()) do
                if dot.Name == "Dot" then dot:Destroy() end
            end
            pathPoints = {}
        end
    end
})

-- Toggle Auto Walk AFK
Tab:CreateToggle({
    Name = "Auto Walk AFK",
    CurrentValue = _G.AutoWalkAFK,
    Flag = "AFKToggle",
    Callback = function(value)
        _G.AutoWalkAFK = value
        if not value then
            for _, dot in pairs(Workspace:GetChildren()) do
                if dot.Name == "Dot" then dot:Destroy() end
            end
            pathPoints = {}
        end
    end
})

-- Slider khoảng cách spawn dot
Tab:CreateSlider({
    Name = "Distance Threshold",
    Range = {1, 20},
    Increment = 1,
    Suffix = "stud",
    CurrentValue = _G.DistanceThreshold,
    Flag = "DistanceSlider",
    Callback = function(value)
        _G.DistanceThreshold = value
    end
})

-- Button clear dot thủ công
Tab:CreateButton({
    Name = "Clear All Dots",
    Callback = function()
        for _, dot in pairs(Workspace:GetChildren()) do
            if dot.Name == "Dot" then dot:Destroy() end
        end
        pathPoints = {}
    end
})