--// Load Rayfield UI
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local HRP, Humanoid = nil, nil

--// Config
local Config = {
    ESP = false,
    Tracer = false,
    Highlight = false,
    ESPColor = Color3.fromRGB(255, 0, 0),
    AvoidPlayers = false,
    AvoidDistance = 15,
    AvoidStep = 20
}

--// Update character refs
local function UpdateChar()
    if LocalPlayer.Character then
        HRP = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        Humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
    end
end
LocalPlayer.CharacterAdded:Connect(function() task.wait(1) UpdateChar() end)
UpdateChar()

--// ESP Highlight
local function CreateHighlight(char)
    if char and not char:FindFirstChild("ESP_Highlight") then
        local h = Instance.new("Highlight", char)
        h.Name = "ESP_Highlight"
        h.FillTransparency = 0.5
        h.OutlineTransparency = 0
        h.FillColor = Config.ESPColor
    end
end
local function RemoveHighlight(char)
    if char and char:FindFirstChild("ESP_Highlight") then
        char.ESP_Highlight:Destroy()
    end
end

--// ESP Loop
RunService.RenderStepped:Connect(function()
    for _,plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer and plr.Character then
            if Config.Highlight then
                CreateHighlight(plr.Character)
            else
                RemoveHighlight(plr.Character)
            end
        end
    end
end)

--// Sit auto jump
task.spawn(function()
    while task.wait(0.2) do
        if Humanoid and Humanoid.Sit then
            Humanoid.Jump = true
        end
    end
end)

--// Auto disable if player moves manually
local lastPos = nil
task.spawn(function()
    while task.wait(1) do
        if HRP then
            if lastPos and (HRP.Position - lastPos).Magnitude > 2 then
                -- t·ª± di chuy·ªÉn => t·∫Øt ESP
                Config.ESP = false
                Config.Highlight = false
                Rayfield:Notify({
                    Title = "ESP Disabled",
                    Content = "B·∫°n ƒë√£ t·ª± ƒëi·ªÅu khi·ªÉn nh√¢n v·∫≠t!",
                    Duration = 3
                })
            end
            lastPos = HRP.Position
        end
    end
end)

--// Avoid Players Loop
task.spawn(function()
    while task.wait(0.2) do
        if Config.AvoidPlayers and HRP and Humanoid then
            local closest, dist = nil, math.huge
            for _,plr in ipairs(Players:GetPlayers()) do
                if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                    local d = (plr.Character.HumanoidRootPart.Position - HRP.Position).Magnitude
                    if d < dist then
                        dist = d
                        closest = plr
                    end
                end
            end
            if closest and dist <= Config.AvoidDistance then
                local dir = (HRP.Position - closest.Character.HumanoidRootPart.Position).Unit
                local offset = dir * Config.AvoidStep
                offset = offset + Vector3.new(math.random(-5,5),0,math.random(-5,5))
                local targetPos = HRP.Position + offset
                Humanoid:MoveTo(targetPos)
            end
        end
    end
end)

--// UI Setup
local Window = Rayfield:CreateWindow({
    Name = "ESP Control Panel",
    LoadingTitle = "üöÄ ESP Menu",
    LoadingSubtitle = "by Red",
    ConfigurationSaving = {
       Enabled = false
    }
})

local Tab = Window:CreateTab("Main", 4483362458)

Tab:CreateToggle({
    Name = "ESP Highlight",
    CurrentValue = false,
    Callback = function(val)
        Config.Highlight = val
    end
})

Tab:CreateColorPicker({
    Name = "ESP Color",
    Color = Config.ESPColor,
    Callback = function(val)
        Config.ESPColor = val
    end
})

Tab:CreateToggle({
    Name = "Auto n√© player g·∫ßn",
    CurrentValue = false,
    Callback = function(val)
        Config.AvoidPlayers = val
    end
})