-- Kavo UI
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("AFK + Né Player 🦅", "DarkTheme")

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")
local Humanoid = Character:WaitForChild("Humanoid")

-- Config
local Config = {
    AutoAFK = false,
    AutoAFKAvoid = false,
    AutoAvoidOnly = false,
    WalkCooldown = 2,
    WalkRange = 30,
    AvoidDistance = 15,
    StepBack = 10,
    JumpWhenSit = true
}

-- Auto reply keywords
local AutoReplyKeywords = {"plss", "pls", "pet", "fruit", "money", "garden"}

-- Check obstacle
local function isObstacle(pos)
    local ray = Ray.new(HRP.Position, (pos - HRP.Position).Unit * 5)
    local part = workspace:FindPartOnRayWithIgnoreList(ray, {Character})
    return part ~= nil
end

-- Move safe
local function moveToSafe(pos)
    local attempt = 0
    while attempt < 5 do
        if not isObstacle(pos) then
            Humanoid:MoveTo(pos)
            Humanoid.MoveToFinished:Wait()
            break
        else
            pos = HRP.Position + Vector3.new(
                math.random(-Config.WalkRange, Config.WalkRange),
                0,
                math.random(-Config.WalkRange, Config.WalkRange)
            )
        end
        attempt += 1
    end
end

-- Random walk like NPC + avoid obstacles
local function randomWalkSafe()
    local newPos = HRP.Position + Vector3.new(
        math.random(-Config.WalkRange, Config.WalkRange),
        0,
        math.random(-Config.WalkRange, Config.WalkRange)
    )
    moveToSafe(newPos)
end

-- Avoid players + avoid obstacles
local function avoidPlayersSafe(freeWalk)
    local closest, dist = nil, math.huge
    for _,plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            local d = (HRP.Position - plr.Character.HumanoidRootPart.Position).Magnitude
            if d < dist then
                closest, dist = plr, d
            end
        end
    end

    if closest and dist <= Config.AvoidDistance then
        local targetHRP = closest.Character.HumanoidRootPart
        local dir = (HRP.Position - targetHRP.Position).Unit

        -- Quay mặt về player
        HRP.CFrame = CFrame.lookAt(HRP.Position, targetHRP.Position)

        -- Lùi từng step tránh obstacle
        local stepBackPos = HRP.Position + dir * Config.StepBack
        moveToSafe(stepBackPos)

        avoidPlayersSafe(freeWalk)
    elseif freeWalk then
        randomWalkSafe()
    end
end

-- Auto AFK / Né loop + tự nhảy khi sit
task.spawn(function()
    while task.wait(0.1) do
        if Humanoid.Sit and Config.JumpWhenSit then
            Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end

        if Config.AutoAFK and not Config.AutoAFKAvoid and not Config.AutoAvoidOnly then
            randomWalkSafe()
            task.wait(Config.WalkCooldown)
        elseif Config.AutoAFKAvoid and not Config.AutoAFK then
            avoidPlayersSafe(true)
            task.wait(Config.WalkCooldown)
        elseif Config.AutoAvoidOnly and not Config.AutoAFK and not Config.AutoAFKAvoid then
            avoidPlayersSafe(false)
            task.wait(0.5)
        end
    end
end)

-- Auto reply function
local function autoReplyNo(player, msg)
    for _, keyword in ipairs(AutoReplyKeywords) do
        if string.find(string.lower(msg), keyword) then
            task.spawn(function()
                task.wait(math.random(1,3))
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Head") then
                    game:GetService("Chat"):Chat(LocalPlayer.Character.Head, "no", Enum.ChatColor.Red)
                end
            end)
            break
        end
    end
end

-- Connect chat
for _, plr in ipairs(Players:GetPlayers()) do
    if plr ~= LocalPlayer then
        plr.Chatted:Connect(function(msg) autoReplyNo(plr, msg) end)
    end
end
Players.PlayerAdded:Connect(function(plr)
    if plr ~= LocalPlayer then
        plr.Chatted:Connect(function(msg) autoReplyNo(plr, msg) end)
    end
end)

-- UI
local MainTab = Window:NewTab("Main")

MainTab:NewToggle("Auto AFK", "Di chuyển như NPC", function(v)
    Config.AutoAFK = v
    if v then Config.AutoAFKAvoid = false Config.AutoAvoidOnly = false end
end)

MainTab:NewToggle("Auto AFK + Né Player", "Di chuyển + né player + né vật thể", function(v)
    Config.AutoAFKAvoid = v
    if v then Config.AutoAFK = false Config.AutoAvoidOnly = false end
end)

MainTab:NewToggle("Auto Né Player", "Chỉ né player + vật thể", function(v)
    Config.AutoAvoidOnly = v
    if v then Config.AutoAFK = false Config.AutoAFKAvoid = false end
end)

local SettingsTab = Window:NewTab("Settings")

SettingsTab:NewSlider("Cooldown (s)", "Cooldown giữa các bước đi", 1, 10, 2, function(v)
    Config.WalkCooldown = v
end)

SettingsTab:NewSlider("Phạm vi đường đi", "Random range", 10, 100, 30, function(v)
    Config.WalkRange = v
end)

SettingsTab:NewSlider("Khoảng cách né player", "Distance to avoid", 5, 50, 15, function(v)
    Config.AvoidDistance = v
end)

SettingsTab:NewSlider("Độ lùi khi né", "Step-back khi né", 5, 30, 10, function(v)
    Config.StepBack = v
end)

-- Textbox tùy chỉnh từ khóa auto reply
SettingsTab:NewTextBox("Từ khóa auto reply", "Ngăn cách dấu ,", function(value)
    AutoReplyKeywords = {}
    for word in string.gmatch(value, "[^,%s]+") do
        table.insert(AutoReplyKeywords, string.lower(word))
    end
end)