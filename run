-- Load Rayfield
local success, Rayfield = pcall(function()
    return loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
end)
if not success or not Rayfield then
    warn("Không load được Rayfield")
    return
end

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")
local Humanoid = Character:WaitForChild("Humanoid")

-- Config
local Config = {
    AutoAFK = false,
    AutoAFKAvoid = false,
    AutoAvoidOnly = false,
    WalkCooldown = 2,
    WalkRange = 30,
    AvoidDistance = 15,
    StepBack = 10,
}

-- Random Walk AFK
local function randomWalk()
    local newPos = HRP.Position + Vector3.new(
        math.random(-Config.WalkRange, Config.WalkRange),
        0,
        math.random(-Config.WalkRange, Config.WalkRange)
    )
    Humanoid:MoveTo(newPos)
end

-- Né player liên tục
local function avoidPlayersContinuous(freeWalk)
    local closest, dist = nil, math.huge
    for _,plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            local d = (HRP.Position - plr.Character.HumanoidRootPart.Position).Magnitude
            if d < dist then
                closest, dist = plr, d
            end
        end
    end

    if closest and dist <= Config.AvoidDistance then
        local targetHRP = closest.Character.HumanoidRootPart
        local dir = (HRP.Position - targetHRP.Position).Unit

        -- Quay mặt về player
        HRP.CFrame = CFrame.lookAt(HRP.Position, targetHRP.Position)

        -- Lùi từng step
        local stepBackPos = HRP.Position + dir * Config.StepBack
        Humanoid:MoveTo(stepBackPos)
        Humanoid.MoveToFinished:Wait()

        -- Loop lại
        avoidPlayersContinuous(freeWalk)
    elseif freeWalk then
        randomWalk()
    end
end

-- Loop Auto AFK / Né
task.spawn(function()
    while task.wait() do
        if Config.AutoAFK and not Config.AutoAFKAvoid and not Config.AutoAvoidOnly then
            randomWalk()
            task.wait(Config.WalkCooldown)
        elseif Config.AutoAFKAvoid and not Config.AutoAFK then
            avoidPlayersContinuous(true)
            task.wait(Config.WalkCooldown)
        elseif Config.AutoAvoidOnly and not Config.AutoAFK and not Config.AutoAFKAvoid then
            avoidPlayersContinuous(false)
            task.wait(0.5)
        end
    end
end)

-- UI
local Window = Rayfield:CreateWindow({ Name = "AFK + Né Player 🦅" })
local Tab = Window:CreateTab("Main")

-- Sliders
Tab:CreateSlider({ Name = "Cooldown (s)", Range = {1,10}, CurrentValue = 2, Callback = function(v) Config.WalkCooldown = v end })
Tab:CreateSlider({ Name = "Phạm vi đường đi", Range = {10,100}, CurrentValue = 30, Callback = function(v) Config.WalkRange = v end })
Tab:CreateSlider({ Name = "Khoảng cách né player", Range = {5,50}, CurrentValue = 15, Callback = function(v) Config.AvoidDistance = v end })
Tab:CreateSlider({ Name = "Độ lùi khi né", Range = {5,30}, CurrentValue = 10, Callback = function(v) Config.StepBack = v end })

-- Buttons
Tab:CreateToggle({ Name = "Auto AFK", CurrentValue = false, Callback = function(v)
    Config.AutoAFK = v
    if v then Config.AutoAFKAvoid = false Config.AutoAvoidOnly = false end
end })

Tab:CreateToggle({ Name = "Auto AFK + Né Player", CurrentValue = false, Callback = function(v)
    Config.AutoAFKAvoid = v
    if v then Config.AutoAFK = false Config.AutoAvoidOnly = false end
end })

Tab:CreateToggle({ Name = "Auto Né Player", CurrentValue = false, Callback = function(v)
    Config.AutoAvoidOnly = v
    if v then Config.AutoAFK = false Config.AutoAFKAvoid = false end
end })