--// Load Rayfield UI
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/SiriusSoftwareLtd/Rayfield/main/source.lua'))()

--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")

--// Spawn NPC nếu chưa có
local npc
if not Workspace:FindFirstChild("NPC") then
    npc = Instance.new("Model")
    npc.Name = "NPC"
    npc.Parent = Workspace

    local npcRoot = Instance.new("Part")
    npcRoot.Name = "HumanoidRootPart"
    npcRoot.Size = Vector3.new(2,2,2)
    npcRoot.Position = root.Position + Vector3.new(5,0,0)
    npcRoot.Anchored = false
    npcRoot.CanCollide = true
    npcRoot.BrickColor = BrickColor.new("Bright yellow")
    npcRoot.Parent = npc

    local humanoid = Instance.new("Humanoid")
    humanoid.Parent = npc
else
    npc = Workspace:FindFirstChild("NPC")
end

local npcRoot = npc:WaitForChild("HumanoidRootPart")
local npcHumanoid = npc:WaitForChild("Humanoid")

-- Table lưu các "dấu chấm"
local pathPoints = {}

-- Default global settings
_G.NPCAutoFollow = true
_G.DistanceThreshold = 5
_G.AutoWalkAFK = true

-- Function thêm dấu chấm
local function addDot(position)
    local dot = Instance.new("Part")
    dot.Name = "Dot"
    dot.Size = Vector3.new(2,2,2)
    dot.Position = position + Vector3.new(0,1,0)
    dot.Anchored = true
    dot.CanCollide = false
    dot.BrickColor = BrickColor.new("Bright red")
    dot.Parent = Workspace
    table.insert(pathPoints, dot)
end

-- NPC di chuyển theo path
local function moveNPC()
    while true do
        if _G.NPCAutoFollow and #pathPoints > 0 then
            local targetDot = pathPoints[1]
            npcHumanoid:MoveTo(targetDot.Position)
            npcHumanoid.MoveToFinished:Wait()
            targetDot:Destroy()
            table.remove(pathPoints, 1)
        else
            wait(0.1)
        end
    end
end
spawn(moveNPC)

-- Auto spawn dot nếu bật Auto Walk AFK
RunService.RenderStepped:Connect(function()
    if _G.AutoWalkAFK and _G.NPCAutoFollow then
        if #pathPoints == 0 or (root.Position - pathPoints[#pathPoints].Position).Magnitude > _G.DistanceThreshold then
            addDot(root.Position)
        end
    end
end)

-- Khi hết dot → /e dance 1-4 + jump + cooldown + lập lại dot
local function idleDance()
    while true do
        if _G.NPCAutoFollow and #pathPoints == 0 then
            local danceId = math.random(1,4)
            print("/e dance "..danceId) -- replace bằng RemoteEvent nếu game hỗ trợ
            npcHumanoid.Jump = true
            wait(3)
            if _G.AutoWalkAFK then
                addDot(root.Position)
            end
        else
            wait(0.1)
        end
    end
end
spawn(idleDance)

--// Rayfield Window
local Window = Rayfield:CreateWindow({
    Name = "NPC Path + AFK Dance",
    LoadingTitle = "Loading...",
    LoadingSubtitle = "Red GPT Script",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "RedScripts",
        FileName = "NPCPathAFK"
    }
})

local Tab = Window:CreateTab("Main", 4483362458)

-- Toggle NPC Auto Follow
Tab:CreateToggle({
    Name = "NPC Auto Follow",
    CurrentValue = _G.NPCAutoFollow,
    Flag = "NPCToggle",
    Callback = function(value)
        _G.NPCAutoFollow = value
        if not value then
            for i, dot in pairs(Workspace:GetChildren()) do
                if dot.Name == "Dot" then
                    dot:Destroy()
                end
            end
            pathPoints = {}
        end
    end
})

-- Toggle Auto Walk AFK
Tab:CreateToggle({
    Name = "Auto Walk AFK",
    CurrentValue = _G.AutoWalkAFK,
    Flag = "AFKToggle",
    Callback = function(value)
        _G.AutoWalkAFK = value
        if not value then
            for i, dot in pairs(Workspace:GetChildren()) do
                if dot.Name == "Dot" then
                    dot:Destroy()
                end
            end
            pathPoints = {}
        end
    end
})

-- Slider khoảng cách spawn dot
Tab:CreateSlider({
    Name = "Distance Threshold",
    Range = {1, 20},
    Increment = 1,
    Suffix = "stud",
    CurrentValue = _G.DistanceThreshold,
    Flag = "DistanceSlider",
    Callback = function(value)
        _G.DistanceThreshold = value
    end
})

-- Button clear dot thủ công
Tab:CreateButton({
    Name = "Clear All Dots",
    Callback = function()
        for i, dot in pairs(Workspace:GetChildren()) do
            if dot.Name == "Dot" then
                dot:Destroy()
            end
        end
        pathPoints = {}
    end
})