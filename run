-- LocalScript trong StarterPlayerScripts
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local humanoid = char:WaitForChild("Humanoid")
local root = char:WaitForChild("HumanoidRootPart")

-- Default settings
local WALK_RADIUS = 50
local COOLDOWN = 2
local autoWalkEnabled = true
local autoJumpWhenSit = true

-- UI setup
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "AutoWalkUI"

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 220, 0, 190)
frame.Position = UDim2.new(0, 20, 0, 200)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.BackgroundTransparency = 0.2

-- Toggle AutoWalk
local toggleBtn = Instance.new("TextButton", frame)
toggleBtn.Size = UDim2.new(1, -20, 0, 30)
toggleBtn.Position = UDim2.new(0, 10, 0, 10)
toggleBtn.Text = "AutoWalk: ON"

toggleBtn.MouseButton1Click:Connect(function()
	autoWalkEnabled = not autoWalkEnabled
	toggleBtn.Text = "AutoWalk: " .. (autoWalkEnabled and "ON" or "OFF")
end)

-- Walk radius box
local radiusBox = Instance.new("TextBox", frame)
radiusBox.Size = UDim2.new(1, -20, 0, 30)
radiusBox.Position = UDim2.new(0, 10, 0, 50)
radiusBox.PlaceholderText = "Walk Radius ("..WALK_RADIUS..")"
radiusBox.Text = ""

radiusBox.FocusLost:Connect(function()
	local val = tonumber(radiusBox.Text)
	if val then
		WALK_RADIUS = val
		radiusBox.PlaceholderText = "Walk Radius ("..WALK_RADIUS..")"
	end
	radiusBox.Text = ""
end)

-- Cooldown box
local cooldownBox = Instance.new("TextBox", frame)
cooldownBox.Size = UDim2.new(1, -20, 0, 30)
cooldownBox.Position = UDim2.new(0, 10, 0, 90)
cooldownBox.PlaceholderText = "Cooldown ("..COOLDOWN.."s)"
cooldownBox.Text = ""

cooldownBox.FocusLost:Connect(function()
	local val = tonumber(cooldownBox.Text)
	if val then
		COOLDOWN = val
		cooldownBox.PlaceholderText = "Cooldown ("..COOLDOWN.."s)"
	end
	cooldownBox.Text = ""
end)

-- Toggle AutoJumpWhenSit
local jumpBtn = Instance.new("TextButton", frame)
jumpBtn.Size = UDim2.new(1, -20, 0, 30)
jumpBtn.Position = UDim2.new(0, 10, 0, 130)
jumpBtn.Text = "AutoJumpWhenSit: ON"

jumpBtn.MouseButton1Click:Connect(function()
	autoJumpWhenSit = not autoJumpWhenSit
	jumpBtn.Text = "AutoJumpWhenSit: " .. (autoJumpWhenSit and "ON" or "OFF")
end)

-- N·∫øu humanoid ng·ªìi th√¨ b·∫≠t nh·∫£y
humanoid:GetPropertyChangedSignal("Sit"):Connect(function()
	if autoJumpWhenSit and humanoid.Sit then
		print("‚ö†Ô∏è Player Sit ‚Üí auto jump")
		if humanoid.SeatPart then
			humanoid.Sit = false -- force detach kh·ªèi seat
		end
		humanoid.Jump = true
	end
end)

-- Random point quanh player
local function getRandomPoint()
	local base = root.Position
	local offset = Vector3.new(
		math.random(-WALK_RADIUS, WALK_RADIUS),
		0,
		math.random(-WALK_RADIUS, WALK_RADIUS)
	)
	return base + offset
end

-- Auto walk loop
task.spawn(function()
	while true do
		if autoWalkEnabled then
			local point = getRandomPoint()
			print("üëâ MoveTo:", point)
			humanoid:MoveTo(point)
			humanoid.MoveToFinished:Wait()
			task.wait(COOLDOWN)
		else
			task.wait(0.5) -- ngh·ªâ khi t·∫Øt auto-walk
		end
	end
end)