-- Load Solaris UI
local SolarisLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/UI-Librarys/main/SolarisLib.lua"))()

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Character, Humanoid, RootPart = nil, nil, nil

-- Variables
local autoAFKEnabled = false
local autoAFKAvoidEnabled = false
local autoAvoidEnabled = false
local cooldown = 2
local moveRange = 30
local avoidRange = 15
local backDistance = 10
local keywords = {"plss", "pls", "pet", "fruit", "money", "garden"}
local replyText = "no"

-- Update character references
local function updateCharacter()
    Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    Humanoid = Character:WaitForChild("Humanoid")
    RootPart = Character:WaitForChild("HumanoidRootPart") or Character:WaitForChild("UpperTorso") or Character.PrimaryPart
end
updateCharacter()
LocalPlayer.CharacterAdded:Connect(updateCharacter)

-- Helper: Random Vector3 near root
local function randomPosition(range)
    local x = math.random(-range, range)
    local z = math.random(-range, range)
    return RootPart.Position + Vector3.new(x,0,z)
end

-- Helper: Distance check
local function distanceToPlayer(otherPlayer)
    if otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return (RootPart.Position - otherPlayer.Character.HumanoidRootPart.Position).Magnitude
    end
    return math.huge
end

-- Auto reply chat
Players.PlayerChatted:Connect(function(player, msg)
    for _, keyword in ipairs(keywords) do
        if string.find(string.lower(msg), keyword) then
            -- Fake chat reply without spam detection
            game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents")
                :WaitForChild("SayMessageRequest")
                :FireServer(replyText, "All")
            break
        end
    end
end)

-- Anti-AFK movement
task.spawn(function()
    while true do
        task.wait(cooldown)
        if autoAFKEnabled or autoAFKAvoidEnabled then
            -- Auto jump if sitting
            if Humanoid.Sit then
                Humanoid.Jump = true
            end

            local targetPos = randomPosition(moveRange)

            -- Avoid players
            if autoAFKAvoidEnabled or autoAvoidEnabled then
                for _, player in pairs(Players:GetPlayers()) do
                    if player ~= LocalPlayer and distanceToPlayer(player) < avoidRange then
                        local dir = (RootPart.Position - player.Character.HumanoidRootPart.Position).Unit
                        targetPos = RootPart.Position + dir * backDistance
                    end
                end
            end

            -- Avoid obstacles (basic raycast)
            local ray = Ray.new(RootPart.Position, (targetPos - RootPart.Position).Unit * moveRange)
            local hit = workspace:FindPartOnRayWithIgnoreList(ray, {Character})
            if hit then
                targetPos = RootPart.Position - (targetPos - RootPart.Position).Unit * 5
            end

            RootPart.CFrame = CFrame.new(targetPos)
        end
    end
end)

-- Build UI
local Window = SolarisLib:New({Name="Anti-AFK & Né Player", FolderToSave="SolarisAFK"})
local MainTab = Window:Tab("Main")
local SettingsTab = Window:Tab("Settings")

-- Main Toggles
MainTab:Toggle("Auto AFK", function(state)
    autoAFKEnabled = state
    if state then autoAFKAvoidEnabled = false end
end)

MainTab:Toggle("Auto AFK + Né Player", function(state)
    autoAFKAvoidEnabled = state
    if state then autoAFKEnabled = false end
end)

MainTab:Toggle("Auto Né Player", function(state)
    autoAvoidEnabled = state
end)

-- Settings
SettingsTab:Slider("Cooldown (s)",1,10,cooldown,function(value) cooldown = value end)
SettingsTab:Slider("Phạm vi di chuyển",10,100,moveRange,function(value) moveRange = value end)
SettingsTab:Slider("Khoảng cách né",5,50,avoidRange,function(value) avoidRange = value end)
SettingsTab:Slider("Độ lùi khi né",5,30,backDistance,function(value) backDistance = value end)
SettingsTab:Textbox("Từ khóa phản hồi","Nhập từ khóa cách nhau bằng dấu phẩy",function(value)
    keywords = {}
    for word in string.gmatch(value, "[^,]+") do
        table.insert(keywords, word:lower())
    end
end)
SettingsTab:Textbox("Text phản hồi","Nhập nội dung reply",function(value)
    replyText = value
end)